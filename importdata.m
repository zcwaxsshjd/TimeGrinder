%%

%%

function Data = importdata(filename)
%IMPORTFILE Import numeric data from a text file as column vectors.
%   [FRAME,RIGHTSHOULDERFLEXTIME,RIGHTSHOULDERROTATIONTIME,RIGHTSHOULDERABDUCTIONTIME,RIGHTELBOWFLEXTIME,RIGHTWRISTFLEXTIME,LEFTSHOULDERFLEXTIME,LEFTSHOULDERROTATIONTIME,LEFTSHOULDERABDUCTIONTIME,LEFTELBOWFLEXTIME,LEFTWRISTFLEXTIME,R_HAND_X,R_HAND_Y,R_HAND_Z,L_HAND_X,L_HAND_Y,L_HAND_Z,PC,POSTERIORDELTOID,BICEPS,TRICEPS_LATERAL,TRICEPS_LONG,TRIGGER]
%   = IMPORTFILE(FILENAME) Reads data from text file FILENAME for the
%   default selection.
%
%   [FRAME,RIGHTSHOULDERFLEXTIME,RIGHTSHOULDERROTATIONTIME,RIGHTSHOULDERABDUCTIONTIME,RIGHTELBOWFLEXTIME,RIGHTWRISTFLEXTIME,LEFTSHOULDERFLEXTIME,LEFTSHOULDERROTATIONTIME,LEFTSHOULDERABDUCTIONTIME,LEFTELBOWFLEXTIME,LEFTWRISTFLEXTIME,R_HAND_X,R_HAND_Y,R_HAND_Z,L_HAND_X,L_HAND_Y,L_HAND_Z,PC,POSTERIORDELTOID,BICEPS,TRICEPS_LATERAL,TRICEPS_LONG,TRIGGER]
%   = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from rows STARTROW
%   through ENDROW of text file FILENAME.
%
% Example:
%   [Frame,RightShoulderFlexTime,RightShoulderRotationTime,RightShoulderAbductionTime,RightElbowFlexTime,RightWristFlexTime,LeftShoulderFlexTime,LeftShoulderRotationTime,LeftShoulderAbductionTime,LeftElbowFlexTime,LeftWristFlexTime,R_hand_x,R_hand_y,R_hand_z,L_hand_x,L_hand_y,L_hand_z,PC,Posteriordeltoid,Biceps,Triceps_lateral,Triceps_long,Trigger]
%   = importfile('FES_S01_L_FR_T01.exp',9, 24108);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2015/07/26 21:01:18

% %% Initialize variables.
% delimiter = ',';
% if nargin<=2
%     startRow = 1;
%     endRow = inf;
% end
% 
% %% Format string for each line of text:
% %   column1: double (%f)
% %	column2: double (%f)
% %   column3: double (%f)
% %	column4: double (%f)
% %   column5: double (%f)
% %	column6: double (%f)
% %   column7: double (%f)
% %	column8: double (%f)
% %   column9: double (%f)
% %	column10: double (%f)
% %   column11: double (%f)
% %	column12: double (%f)
% %   column13: double (%f)
% %	column14: double (%f)
% %   column15: double (%f)
% %	column16: double (%f)
% %   column17: double (%f)
% %	column18: double (%f)
% %   column19: double (%f)
% %	column20: double (%f)
% %   column21: double (%f)
% %	column22: double (%f)
% %   column23: double (%f)
% % For more information, see the TEXTSCAN documentation.
% formatSpec = '%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%[^\n\r]';
% 
% %% Open the text file.
% fileID = fopen(filename,'r');
% 
% %% Read columns of data according to format string.
% % This call is based on the structure of the file used to generate this
% % code. If an error occurs for a different file, try regenerating the code
% % from the Import Tool.
% textscan(fileID, '%[^\n\r]', startRow(1)-1, 'ReturnOnError', false);
% dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'ReturnOnError', false);
% for block=2:length(startRow)
%     frewind(fileID);
%     textscan(fileID, '%[^\n\r]', startRow(block)-1, 'ReturnOnError', false);
%     dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'ReturnOnError', false);
%     for col=1:length(dataArray)
%         dataArray{col} = [dataArray{col};dataArrayBlock{col}];
%     end
% end
% 
% %% Close the text file.
% fclose(fileID);
% 
% %% Post processing for unimportable data.
% % No unimportable data rules were applied during the import, so no post
% % processing code is included. To generate code which works for
% % unimportable data, select unimportable cells in a file and regenerate the
% % script.
%% read file
sum_data=dataset('File',filename,'ReadVarNames',true,'ReadObsNames',false,'Delimiter',',');
% dataArray = dataset2cell(sum_data);
%% Allocate imported array to column variable names
% Data.Frame = dataArray(2:end, 4);
% Data.RightShoulderFlex = dataArray(2:end, 5);
% Data.RightShoulderRotation = dataArray(2:end, 6);
% Data.RightShoulderAbduction = dataArray(2:end, 7);
% Data.RightElbowFlex = dataArray(2:end, 8);
% Data.RightWristFlex = dataArray(2:end, 9);
% Data.LeftShoulderFlex = dataArray(2:end, 10);
% Data.LeftShoulderRotation = dataArray(2:end, 11);
% Data.LeftShoulderAbduction = dataArray(2:end, 12);
% Data.LeftElbowFlex = dataArray(2:end, 13);
% Data.LeftWristFlex = dataArray(2:end, 14);
% Data.R_hand_x = dataArray(2:end, 15);
% Data.R_hand_y = dataArray(2:end, 16);
% Data.R_hand_z = dataArray(2:end, 17);
% Data.L_hand_x = dataArray(2:end, 18);
% Data.L_hand_y = dataArray(2:end, 19);
% Data.L_hand_z = dataArray(2:end, 20);
% Data.PC = dataArray(2:end, 21);
% Data.Posteriordeltoid = dataArray(2:end, 22);
% Data.Biceps = dataArray(2:end, 23);
% Data.Triceps_lateral = dataArray(2:end, 24);
% Data.Triceps_long = dataArray(2:end, 25);
% Data.Trigger = dataArray(2:end, 26);
Data.Frame = sum_data.Frame_;
Data.RightShoulderFlex = sum_data.RightElbowFlex_Time;
Data.RightShoulderRotation = sum_data.RightShoulderRotation_Time;
Data.RightShoulderAbduction = sum_data.RightShoulderAbduction_Time;
Data.RightElbowFlex = sum_data.RightElbowFlex_Time;
Data.RightWristFlex = sum_data.RightWristFlex_Time;
Data.LeftShoulderFlex = sum_data.LeftShoulderFlex_Time;
Data.LeftShoulderRotation = sum_data.LeftShoulderRotation_Time;
Data.LeftShoulderAbduction = sum_data.LeftShoulderAbduction_Time;
Data.LeftElbowFlex = sum_data.LeftElbowFlex_Time;
Data.LeftWristFlex = sum_data.LeftWristFlex_Time;
Data.R_hand_x = sum_data.R_hand_x;
Data.R_hand_y = sum_data.R_hand_y;
Data.R_hand_z = sum_data.R_hand_z;
Data.L_hand_x = sum_data.L_hand_x;
Data.L_hand_y = sum_data.L_hand_y;
Data.L_hand_z = sum_data.L_hand_z;
Data.L_acro_x = sum_data.L_acro_x;
Data.L_acro_y = sum_data.L_acro_y;
Data.L_acro_z = sum_data.L_acro_z;
Data.L_epic_x = sum_data.L_yzg_x;
Data.L_epic_y = sum_data.L_yzg_y;
Data.L_epic_z = sum_data.L_yzg_z;
Data.R_epic_x = sum_data.R_yzg_x;
Data.R_epic_y = sum_data.R_yzg_y;
Data.R_epic_z = sum_data.R_yzg_z;
Data.PC = sum_data.PC;
Data.Posteriordeltoid = sum_data.PosteriorDeltoid;
Data.Biceps = sum_data.Biceps;
Data.Triceps_lateral = sum_data.Triceps_lateral;
Data.Triceps_long = sum_data.Triceps_long;
Data.Trigger = sum_data.Trigger;

